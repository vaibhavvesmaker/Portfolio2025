@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
  scroll-behavior: smooth;
  color-scheme: light; /* Updated to light for better compatibility with vibrant colors */
}

.hash-span {
  margin-top: -100px;
  padding-bottom: 100px;
  display: block;
}

.black-gradient {
  background: linear-gradient(135deg, #581845, #900c3f); /* Smooth gradient from Deep Purple to Dark Red */
}

.violet-gradient {
  background: linear-gradient(135deg, #900c3f, rgba(60, 51, 80, 0)); /* Dark Red fading to transparent */
}

.green-pink-gradient {
  background: linear-gradient(90deg, #ff5733, #c70039); /* Vibrant Orange to Crimson Red */
  transition: background 0.3s ease-in-out;
}

.green-pink-gradient:hover {
  background: linear-gradient(90deg, #c70039, #ff5733); /* Reverse gradient on hover */
}

.orange-text-gradient {
  background: linear-gradient(to top, #ff5733, #ffc300); /* Orange to Yellow */
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: bold;
}

.green-text-gradient {
  background: linear-gradient(to top, #c70039, #900c3f); /* Crimson Red to Dark Red */
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: bold;
}

.blue-text-gradient {
  background: linear-gradient(to top, #ffc300, #ff5733); /* Yellow to Orange */
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: bold;
}

.pink-text-gradient {
  background: linear-gradient(to top, #900c3f, #581845); /* Dark Red to Deep Purple */
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: bold;
}

.button-gradient {
  background: linear-gradient(90deg, #ff5733, #c70039); /* Vibrant Orange to Crimson Red */
  color: #fff;
  padding: 10px 20px;
  border-radius: 25px;
  font-weight: bold;
  text-transform: uppercase;
  transition: transform 0.3s ease, background 0.3s ease;
}

.button-gradient:hover {
  transform: scale(1.05);
  background: linear-gradient(90deg, #c70039, #ff5733); /* Reverse gradient on hover */
}

.canvas-loader {
  font-size: 10px;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  position: relative;
  text-indent: -9999em;
  animation: mulShdSpin 1.1s infinite ease;
  transform: translateZ(0);
}

@keyframes mulShdSpin {
  0%,
  100% {
    box-shadow: 0em -2.6em 0em 0em #ffffff,
      1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),
      2.5em 0em 0 0em rgba(255, 255, 255, 0.2),
      1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),
      0em 2.5em 0 0em rgba(255, 255, 255, 0.2),
      -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),
      -2.6em 0em 0 0em rgba(255, 255, 255, 0.5),
      -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7);
  }
  12.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.7),
      1.8em -1.8em 0 0em #ffffff, 2.5em 0em 0 0em rgba(255, 255, 255, 0.2),
      1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),
      0em 2.5em 0 0em rgba(255, 255, 255, 0.2),
      -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),
      -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),
      -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5);
  }
}


.arrow-container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.arrow {
  position: absolute;
  width: 50px;
  height: 50px;
  border: solid crimson;
  border-width: 0 10px 10px 0;
  transform: rotate(45deg);
  animation: move-arrows 5s linear infinite;
}

.arrow:nth-child(1) {
  top: 10%;
  left: 20%;
  animation-delay: 0s;
}

.arrow:nth-child(2) {
  top: 50%;
  left: 40%;
  animation-delay: 1s;
}

.arrow:nth-child(3) {
  top: 80%;
  left: 60%;
  animation-delay: 2s;
}

/* Triangle shape for arrows */
.triangle {
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 20px solid #581845; /* Red color for the triangle */
  position: absolute;
}

@keyframes move-arrows {
  0% {
    transform: translateY(0) rotate(45deg);
  }
  100% {
    transform: translateY(100vh) rotate(45deg);
  }
}